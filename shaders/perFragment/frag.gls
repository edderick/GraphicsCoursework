#version 330 core

precision highp float; 

in vec4 ex_Color;
in vec4 camera_normal;
in vec4 camera_light_direction;
in vec4 camera_direction;

in float distance;

out vec4 gl_FragColor; 

const float light_power = 2.f;

void main(void) {
	vec4 ambient = vec4(ex_Color.xyz,1.0) * vec4(.2,.2,.2,1.);

	vec4 diffuse
		= light_power *  vec4(0.5, 0.5, 0.5, 1.) * ex_Color * clamp(dot(camera_normal, camera_light_direction),0,1) ;//  (distance * distance);	

	vec4 reflection = reflect(camera_light_direction, camera_normal);

	vec4 specular 
		= light_power * vec4(0.5,0.5,0.5,1.) * pow(clamp(dot(camera_direction, reflection), 0, 1), 1) ;//  (distance * distance);

	//gl_FragColor =  diffuse + ambient ;
	gl_FragColor = specular + diffuse + ambient ;

}
